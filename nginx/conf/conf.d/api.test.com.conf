server {
    listen 80;
    server_name api.test.com;
    root    /data/www/html;
    index   index.html;


    set_real_ip_from 172.16.0.0/12;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    # 跨域
    add_header Access-Control-Allow-Origin * always;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
    if ($request_method = 'OPTIONS') {
        return 204;
    }
    #  HTTP 协议版本
    proxy_http_version 1.1;
    proxy_set_header Connection "";

    # 开启拦截错误功能。当后端服务器返回的响应状态码为 400 或 500 等错误状态码时，Nginx 将会拦截这些错误并返回自定义的错误页面或者执行其他的处理逻辑。
    proxy_intercept_errors on;

    location /api {
        # 不缓存
        expires    epoch;
        proxy_pass http://api-test;            

        access_log /data/logs/nginx/api-access.log json_format;
        error_log /data/logs/nginx/api-error.log;
    }
}